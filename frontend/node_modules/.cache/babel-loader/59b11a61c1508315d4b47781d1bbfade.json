{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\35192\\\\OneDrive\\\\Desktop\\\\feup-sinf\\\\src\\\\components\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nimport { useMemo, useEffect, useState } from 'react';\nimport Pagination from \"react-bootstrap/Pagination\";\nimport '../styles/Pagination.css';\n\nconst PaginationComponent = ({\n  total = 0,\n  itemsPerPage = 10,\n  currentPage = 1,\n  onPageChange\n}) => {\n  _s();\n\n  const [totalPages, setTotalPages] = useState(0); //    let  [pages, setPages] = useState([]);\n\n  const set = new Set();\n  const pages = [];\n  useEffect(() => {\n    if (total > 0 && itemsPerPage > 0) setTotalPages(Math.ceil(total / itemsPerPage));\n  }, [total, itemsPerPage]);\n  /*\n  useEffect(() => {\n      set.clear();\n      const offset = 5;\n          set.add(1);\n          set.add(totalPages);\n  \n          for(let i = 0 ; i < offset; i++) {\n              set.add(Math.min(1 + i, totalPages));\n              set.add(Math.max(currentPage - i, 1));\n              set.add(Math.min(currentPage + i , totalPages));\n              set.add(Math.max(totalPages - i, 1));\n          }\n  \n  \n          pages = Array.from(set).sort((a,b) => a-b);\n          setPages(pages);\n   }, [currentPage, totalPages]);*/\n\n  const paginationItems = useMemo(() => {\n    for (let i = 0; i < totalPages; i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: i === currentPage,\n        onClick: () => onPageChange(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this));\n    }\n\n    return pages;\n  }, [totalPages, currentPage]);\n  if (totalPages === 0) return null;\n  return /*#__PURE__*/_jsxDEV(Pagination, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n      onClick: () => {\n        if (currentPage > 1) onPageChange(currentPage - 1);\n      },\n      disabled: currentPage === 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), paginationItems, /*#__PURE__*/_jsxDEV(Pagination.Next, {\n      onClick: () => {\n        if (currentPage < totalPages) onPageChange(currentPage + 1);\n      },\n      disabled: currentPage === totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PaginationComponent, \"MKlQ5ncFBmedXV2GyHherFj+chg=\");\n\n_c = PaginationComponent;\nexport default PaginationComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationComponent\");","map":{"version":3,"sources":["C:/Users/35192/OneDrive/Desktop/feup-sinf/src/components/Pagination.js"],"names":["useMemo","useEffect","useState","Pagination","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","totalPages","setTotalPages","set","Set","pages","Math","ceil","paginationItems","i","push"],"mappings":";;;;;AAAA,SAAQA,OAAR,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAO,0BAAP;;AAGA,MAAMC,mBAAmB,GAAG,CAAC;AACzBC,EAAAA,KAAK,GAAG,CADiB;AAEzBC,EAAAA,YAAY,GAAG,EAFU;AAGzBC,EAAAA,WAAW,GAAG,CAHW;AAIzBC,EAAAA;AAJyB,CAAD,KAKtB;AAAA;;AAGF,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAAD,CAA5C,CAHE,CAIH;;AACC,QAAMS,GAAG,GAAG,IAAIC,GAAJ,EAAZ;AACA,QAAMC,KAAK,GAAG,EAAd;AAIAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAII,KAAK,GAAG,CAAR,IAAaC,YAAY,GAAG,CAAhC,EACII,aAAa,CAACI,IAAI,CAACC,IAAL,CAAUV,KAAK,GAAGC,YAAlB,CAAD,CAAb;AAEP,GAJQ,EAIN,CAACD,KAAD,EAAQC,YAAR,CAJM,CAAT;AAMA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAII,QAAMU,eAAe,GAAGhB,OAAO,CAAC,MAAM;AAClC,SAAK,IAAIiB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,UAApB,EAAgCQ,CAAC,EAAjC,EAAqC;AACjCJ,MAAAA,KAAK,CAACK,IAAN,eACI,QAAC,UAAD,CAAY,IAAZ;AAEI,QAAA,MAAM,EAAED,CAAC,KAAKV,WAFlB;AAGI,QAAA,OAAO,EAAE,MAAMC,YAAY,CAACS,CAAD,CAH/B;AAAA,kBAMCA;AAND,SACSA,CADT;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH;;AAGD,WAAOJ,KAAP;AACH,GAhB8B,EAgB5B,CAACJ,UAAD,EAAaF,WAAb,CAhB4B,CAA/B;AAkBA,MAAIE,UAAU,KAAK,CAAnB,EAAsB,OAAO,IAAP;AAEtB,sBACI,QAAC,UAAD;AAAA,4BACI,QAAC,UAAD,CAAY,IAAZ;AACI,MAAA,OAAO,EAAE,MAAM;AAAE,YAAIF,WAAW,GAAG,CAAlB,EAAqBC,YAAY,CAACD,WAAW,GAAG,CAAf,CAAZ;AAA8B,OADxE;AAEI,MAAA,QAAQ,EAAEA,WAAW,KAAK;AAF9B;AAAA;AAAA;AAAA;AAAA,YADJ,EAKKS,eALL,eAMI,QAAC,UAAD,CAAY,IAAZ;AACI,MAAA,OAAO,EAAE,MAAM;AAAC,YAAIT,WAAW,GAAGE,UAAlB,EAA8BD,YAAY,CAACD,WAAW,GAAG,CAAf,CAAZ;AAA8B,OADhF;AAEI,MAAA,QAAQ,EAAEA,WAAW,KAAKE;AAF9B;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA3ED;;GAAML,mB;;KAAAA,mB;AA6EN,eAAeA,mBAAf","sourcesContent":["import {useMemo, useEffect, useState} from 'react';\nimport Pagination from \"react-bootstrap/Pagination\";\nimport '../styles/Pagination.css';\n\n\nconst PaginationComponent = ({\n    total = 0,\n    itemsPerPage = 10,\n    currentPage = 1,\n    onPageChange\n}) => {\n\n\n    const [totalPages, setTotalPages] = useState(0);\n   //    let  [pages, setPages] = useState([]);\n    const set = new Set();\n    const pages = [];\n\n\n\n    useEffect(() => {\n        if (total > 0 && itemsPerPage > 0)\n            setTotalPages(Math.ceil(total / itemsPerPage));\n                \n    }, [total, itemsPerPage]);\n\n    /*\n    useEffect(() => {\n        set.clear();\n        const offset = 5;\n            set.add(1);\n            set.add(totalPages);\n    \n            for(let i = 0 ; i < offset; i++) {\n                set.add(Math.min(1 + i, totalPages));\n                set.add(Math.max(currentPage - i, 1));\n                set.add(Math.min(currentPage + i , totalPages));\n                set.add(Math.max(totalPages - i, 1));\n            }\n    \n    \n            pages = Array.from(set).sort((a,b) => a-b);\n            setPages(pages);\n\n    }, [currentPage, totalPages]);*/\n\n    \n    const paginationItems = useMemo(() => {\n        for (let i = 0; i < totalPages; i++) {\n            pages.push(\n                <Pagination.Item \n                    key={i}\n                    active={i === currentPage}\n                    onClick={() => onPageChange(i)\n                    }\n                > \n                {i}\n                </Pagination.Item>\n            );\n        }\n\n\n        return pages;\n    }, [totalPages, currentPage]);\n\n    if (totalPages === 0) return null;\n\n    return (\n        <Pagination>\n            <Pagination.Prev\n                onClick={() => { if (currentPage > 1) onPageChange(currentPage - 1)}}\n                disabled={currentPage === 1}\n            />\n            {paginationItems}\n            <Pagination.Next\n                onClick={() => {if (currentPage < totalPages) onPageChange(currentPage + 1)}}\n                disabled={currentPage === totalPages}\n            />\n        </Pagination>\n    );\n};\n\nexport default PaginationComponent;"]},"metadata":{},"sourceType":"module"}