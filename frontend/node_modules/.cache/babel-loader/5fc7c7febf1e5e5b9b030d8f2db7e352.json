{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\35192\\\\OneDrive\\\\Desktop\\\\feup-sinf\\\\src\\\\components\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nimport { useMemo, useEffect, useState } from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\nimport '../styles/Pagination.css';\n\nconst PaginationComponent = ({\n  total = 0,\n  itemsPerPage = 10,\n  currentPage = 1,\n  onPageChange\n}) => {\n  _s();\n\n  const [totalPages, setTotalPages] = useState(0);\n  const [pages, setPages] = useState([]);\n  const set = new Set();\n  useEffect(() => {\n    if (total > 0 && itemsPerPage > 0) setTotalPages(Math.ceil(total / itemsPerPage));\n  }, [total, itemsPerPage]);\n  useEffect(() => {\n    set.clear();\n    const offset = 5;\n    set.add(1);\n    set.add(totalPages);\n\n    for (let i = 0; i < offset; i++) {\n      set.add(Math.min(1 + i, totalPages));\n      set.add(Math.max(currentPage - i, 1));\n      set.add(Math.min(currentPage + i, totalPages));\n      set.add(Math.max(totalPages - i, 1));\n    }\n\n    setPages(Array.from(set).sort((a, b) => a - b));\n    console.log(pages);\n  }, [currentPage, totalPages]);\n  const paginationItems = useMemo(() => {\n    console.log('pages: ' + pages.length);\n\n    for (let i = 0; i < totalPages; i++) {\n      pages.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: i === currentPage,\n        onClick: () => onPageChange(i),\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this));\n    }\n\n    return pages;\n  }, [totalPages, currentPage]);\n  if (totalPages === 0) return null;\n  return /*#__PURE__*/_jsxDEV(Pagination, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination.Prev, {\n      onClick: () => {\n        if (currentPage > 1) onPageChange(currentPage - 1);\n      },\n      disabled: currentPage === 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), paginationItems, /*#__PURE__*/_jsxDEV(Pagination.Next, {\n      onClick: () => {\n        if (currentPage < totalPages) onPageChange(currentPage + 1);\n      },\n      disabled: currentPage === totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaginationComponent, \"IJHOY23dvkRluP3Wa7slpRuDLAg=\");\n\n_c = PaginationComponent;\nexport default PaginationComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaginationComponent\");","map":{"version":3,"sources":["C:/Users/35192/OneDrive/Desktop/feup-sinf/src/components/Pagination.js"],"names":["useMemo","useEffect","useState","Pagination","PaginationComponent","total","itemsPerPage","currentPage","onPageChange","totalPages","setTotalPages","pages","setPages","set","Set","Math","ceil","clear","offset","add","i","min","max","Array","from","sort","a","b","console","log","paginationItems","length","push"],"mappings":"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","sourcesContent":["import { useMemo, useEffect, useState } from 'react';\nimport Pagination from 'react-bootstrap/Pagination';\nimport '../styles/Pagination.css';\n\nconst PaginationComponent = ({\n  total = 0,\n  itemsPerPage = 10,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const [totalPages, setTotalPages] = useState(0);\n  const [pages, setPages] = useState([]);\n  const set = new Set();\n\n  useEffect(() => {\n    if (total > 0 && itemsPerPage > 0)\n      setTotalPages(Math.ceil(total / itemsPerPage));\n  }, [total, itemsPerPage]);\n\n  useEffect(() => {\n    set.clear();\n    const offset = 5;\n    set.add(1);\n    set.add(totalPages);\n\n    for (let i = 0; i < offset; i++) {\n      set.add(Math.min(1 + i, totalPages));\n      set.add(Math.max(currentPage - i, 1));\n      set.add(Math.min(currentPage + i, totalPages));\n      set.add(Math.max(totalPages - i, 1));\n    }\n\n    setPages(Array.from(set).sort((a, b) => a - b));\n    console.log(pages);\n  }, [currentPage, totalPages]);\n\n  const paginationItems = useMemo(() => {\n    console.log('pages: ' + pages.length);\n    for (let i = 0; i < totalPages; i++) {\n      pages.push(\n        <Pagination.Item\n          key={i}\n          active={i === currentPage}\n          onClick={() => onPageChange(i)}\n        >\n          {i}\n        </Pagination.Item>\n      );\n    }\n\n    return pages;\n  }, [totalPages, currentPage]);\n\n  if (totalPages === 0) return null;\n\n  return (\n    <Pagination>\n      <Pagination.Prev\n        onClick={() => {\n          if (currentPage > 1) onPageChange(currentPage - 1);\n        }}\n        disabled={currentPage === 1}\n      />\n      {paginationItems}\n      <Pagination.Next\n        onClick={() => {\n          if (currentPage < totalPages) onPageChange(currentPage + 1);\n        }}\n        disabled={currentPage === totalPages}\n      />\n    </Pagination>\n  );\n};\n\nexport default PaginationComponent;\n"]},"metadata":{},"sourceType":"module"}