{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\35192\\\\OneDrive\\\\Desktop\\\\feup-sinf\\\\src\\\\components\\\\TableHeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst TableHeader = ({\n  headers,\n  onSorting\n}) => {\n  _s();\n\n  const [sortingField, setSortingField] = useState(\"\");\n  const [sortingOrder, setSortingOrder] = useState(\"asc\");\n\n  const onSortingChange = field => {\n    const order = field === sortingField && sortingOrder === \"asc\" ? \"desc\" : \"asc\";\n    setSortingField(field);\n    setSortingOrder(order);\n    onSorting(field, order);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: headers.map(({\n        name,\n        field,\n        sortable\n      }) => /*#__PURE__*/_jsxDEV(\"th\", {\n        style: {\n          backgroundColor: \"orange\"\n        },\n        onClick: () => sortable ? onSortingChange(field) : null,\n        children: [name, sortingField && sortingField === field && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: sortingOrder === \"asc\" ? \"arrow-down\" : \"arrow-up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }, this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TableHeader, \"OOXX16tMZyoZAyuCVq67k1JYgzc=\");\n\n_c = TableHeader;\nexport default TableHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableHeader\");","map":{"version":3,"sources":["C:/Users/35192/OneDrive/Desktop/feup-sinf/src/components/TableHeader.js"],"names":["React","useState","FontAwesomeIcon","TableHeader","headers","onSorting","sortingField","setSortingField","sortingOrder","setSortingOrder","onSortingChange","field","order","map","name","sortable","backgroundColor"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAD,KAA4B;AAAA;;AAC5C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;;AAEA,QAAMS,eAAe,GAAIC,KAAD,IAAW;AAC/B,UAAMC,KAAK,GACPD,KAAK,KAAKL,YAAV,IAA0BE,YAAY,KAAK,KAA3C,GAAmD,MAAnD,GAA4D,KADhE;AAGAD,IAAAA,eAAe,CAACI,KAAD,CAAf;AACAF,IAAAA,eAAe,CAACG,KAAD,CAAf;AACAP,IAAAA,SAAS,CAACM,KAAD,EAAQC,KAAR,CAAT;AACH,GAPD;;AASA,sBACI;AAAA,2BACI;AAAA,gBACKR,OAAO,CAACS,GAAR,CAAY,CAAC;AAAEC,QAAAA,IAAF;AAAQH,QAAAA,KAAR;AAAeI,QAAAA;AAAf,OAAD,kBACT;AAAI,QAAA,KAAK,EAAI;AAACC,UAAAA,eAAe,EAAG;AAAnB,SAAb;AAEI,QAAA,OAAO,EAAE,MACLD,QAAQ,GAAGL,eAAe,CAACC,KAAD,CAAlB,GAA4B,IAH5C;AAAA,mBAMKG,IANL,EAQKR,YAAY,IAAIA,YAAY,KAAKK,KAAjC,iBACG,QAAC,eAAD;AACI,UAAA,IAAI,EACAH,YAAY,KAAK,KAAjB,GACM,YADN,GAEM;AAJd;AAAA;AAAA;AAAA;AAAA,gBATR;AAAA,SACSM,IADT;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CAxCD;;GAAMX,W;;KAAAA,W;AA0CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst TableHeader = ({ headers, onSorting }) => {\n    const [sortingField, setSortingField] = useState(\"\");\n    const [sortingOrder, setSortingOrder] = useState(\"asc\");\n\n    const onSortingChange = (field) => {\n        const order =\n            field === sortingField && sortingOrder === \"asc\" ? \"desc\" : \"asc\";\n\n        setSortingField(field);\n        setSortingOrder(order);\n        onSorting(field, order);\n    };\n\n    return (\n        <thead>\n            <tr>\n                {headers.map(({ name, field, sortable }) => (\n                    <th style = {{backgroundColor : \"orange\"}}\n                        key={name}\n                        onClick={() =>\n                            sortable ? onSortingChange(field) : null\n                        }\n                    >\n                        {name}\n\n                        {sortingField && sortingField === field && (\n                            <FontAwesomeIcon\n                                icon={\n                                    sortingOrder === \"asc\"\n                                        ? \"arrow-down\"\n                                        : \"arrow-up\"\n                                }\n                            />\n                            \n                        )}\n                    </th>\n                ))}\n            </tr>\n        </thead>\n    );\n};\n\nexport default TableHeader; "]},"metadata":{},"sourceType":"module"}